name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions:
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: ""
      - uses: julia-actions/julia-runtest@v1
        env:
          PYTHON: ""
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          slug: n1developer-ubt/data-preprocessing-juml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
    # runs-on: ubuntu-latest
    # steps:
    #   - uses: actions/checkout@v4

    #   - name: Set up Julia
    #     uses: julia-actions/setup-julia@v2
    #     with:
    #       version: '1'

    #   - uses: julia-actions/cache@v2

    #   - name: Install dependencies
    #     run: julia --project=. -e 'using Pkg; Pkg.instantiate()'

    #   - name: Run tests with coverage
    #     run: julia --project=. --code-coverage=all -e 'using Pkg; Pkg.test()'

    #   - name: Generate coverage report
    #     run: julia --project=. -e 'using Coverage; cover = process_folder(); LCOV.writefile("coverage.lcov", cover)'

    #   - name: Upload coverage to Codecov
    #     uses: codecov/codecov-action@v4
    #     with:
    #       files: ./coverage.lcov 
    #       fail_ci_if_error: false

